version: '3.8'

networks:
  metabase-internal:
  dbt-metabase:

services:
  metabase:
    image: metabase/metabase:v0.50.6
    # image: metabase/metabase:latest
    hostname: metabase
    container_name: metabase
    restart: always
    volumes:
    - /dev/urandom:/dev/random:ro
    ports:
    - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: ${MB_POSTGRES_USER}
      MB_DB_PASS: ${MB_POSTGRES_PASSWORD}
      MB_DB_HOST: metabase-postgres 
    networks:
    - metabase-internal
    - dbt-metabase
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 50
    depends_on:
    - metabase-postgres

  # metabase backend database
  metabase-postgres:
    image: postgres:15.2
    hostname: metabase-postgres
    container_name: metabase-postgres
    restart: always
    environment:
      POSTGRES_USER: ${MB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MB_POSTGRES_PASSWORD}
      POSTGRES_DB: metabase
    volumes:
    - ./metabase/postgres-data:/var/lib/postgresql/data
    ports:
    - ${MB_POSTGRES_PORT}:5432
    networks:
    - metabase-internal

  #postgres as database to store data model
  postgresql:
    image: postgres:15.2
    hostname: postgresql
    container_name: db-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
    volumes:
    - ./postgres-data:/var/lib/postgresql/data
    ports:
    - ${POSTGRES_PORT}:5432
    networks:
    - dbt-metabase


